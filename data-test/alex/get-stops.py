#!/usr/bin/python
# -*- coding: utf-8 -*-

import urllib
import re
import sys
import json

namelist = json.loads(open('names-saturday.json').read().replace("&amp;", "&"))

def print_stops(name, infostring, stopdict, route):
	#print "<<<<<<<<<<", name, ">>>>>>>>>>>>>>"
	stops = infostring.split(';')
	for stop in stops: #lat|lon|name|dir|time time time;  
		if stop == "":
			continue;
		
		parts = stop.split('|')
		lat		= parts[0]
		lon		= parts[1]
		name	= parts[2]
		dir		= parts[3]
		time	= parts[4]
		
		latlong = "%s:%s" % (lat, lon)
		
		
		stopidre = re.search('\\[ID#(.*)\\]', name)
		if stopidre == None:
			stopidre = re.search('\\[(.*)\\]', name)
		if stopidre == None and "School Day Only" in dir:
			stopid = -1
		elif stopidre == None:
			print >>sys.stderr, "no id:", name, "dir:", dir, "route:", route
			for tryname in namelist:
				if '&' in name:
					names = name.split('&')
					if names[0].strip().upper() in tryname.upper() and \
					   names[1].strip().upper() in tryname.upper() and \
					   "route="+str(route) in tryname and \
					   "dir="+dir in tryname:
					   
						stopid = int(re.search('ID#(\\d+)', tryname).group(1))
						print >>sys.stderr, tryname, "dir", dir
						break
				else:
					if name.strip().upper() in tryname.upper() and \
					   "route="+str(route) in tryname and \
					   "dir="+dir in tryname:
					   
						stopid = int(re.search('ID#(\\d+)', tryname).group(1))
						print >>sys.stderr, tryname, "dir:", dir
						break
						
			print >>sys.stderr, stopid
			print >>sys.stderr, ""
		else:
			stopid = int(stopidre.group(1))
		
		item = {}
		item['lat'] = lat
		item['lon'] = lon
		item['name'] = name
		#item['dir'] = dir
		
		if (stopid in stopdict and stopdict[stopid] != item):
			print >> sys.stderr, "already contains id %d: old <%s> new <%s>" % (stopid, stopdict[stopid], item)
		
		stopdict[stopid] = item
		
	
		#print "lat=%s lon=%s name=%s dir=%s time=%s" % (lat, lon, name, dir, time)
		#print

def print_vehicles(infostring):
	#print "<<<<<<<<<< Vehicle >>>>>>>>>>>>>>"
	vehicles = infostring.split(';')
	for vehicle in vehicles:   
		if vehicle == "":
			continue;
		
		parts = vehicle.split('|')
		#print parts
		lat		= parts[0]
		lon		= parts[1]
		vehNumber	= parts[2]
		content		= parts[3]
	
		#print "lat=%s lon=%s vehNumber=%s content=%s" % (lat, lon, vehNumber, content)
		#print


def get_stops(route, stopdict):
	html = urllib.urlopen('http://webwatch.cityofmadison.com/webwatch/map.aspx?mode=g', '__EVENTTARGET=ddlMaps&__EVENTARGUMENT=&__LASTFOCUS=&__VIEWSTATE=%2FwEPDwUKMTk2NjU5NjE5Nw9kFgICAQ9kFgYCAQ8QZBAVPw5TZWxlY3QgYSByb3V0ZQwwMSAtIFJvdXRlIDEMMDIgLSBSb3V0ZSAyDDAzIC0gUm91dGUgMwwwNCAtIFJvdXRlIDQMMDUgLSBSb3V0ZSA1DDA2IC0gUm91dGUgNgwwNyAtIFJvdXRlIDcMMDggLSBSb3V0ZSA4DDA5IC0gUm91dGUgOQ0xMCAtIFJvdXRlIDEwDTExIC0gUm91dGUgMTENMTIgLSBSb3V0ZSAxMg0xMyAtIFJvdXRlIDEzDTE0IC0gUm91dGUgMTQNMTUgLSBSb3V0ZSAxNQ0xNiAtIFJvdXRlIDE2DTE3IC0gUm91dGUgMTcNMTggLSBSb3V0ZSAxOA0xOSAtIFJvdXRlIDE5DTIwIC0gUm91dGUgMjANMjEgLSBSb3V0ZSAyMQ0yMiAtIFJvdXRlIDIyDTI1IC0gUm91dGUgMjUNMjYgLSBSb3V0ZSAyNg0yNyAtIFJvdXRlIDI3DTI4IC0gUm91dGUgMjgNMjkgLSBSb3V0ZSAyOQ0zMCAtIFJvdXRlIDMwDTMyIC0gUm91dGUgMzINMzMgLSBSb3V0ZSAzMw0zNCAtIFJvdXRlIDM0DTM2IC0gUm91dGUgMzYNMzcgLSBSb3V0ZSAzNw0zOCAtIFJvdXRlIDM4DTM5IC0gUm91dGUgMzkNNDAgLSBSb3V0ZSA0MA00NCAtIFJvdXRlIDQ0DTQ3IC0gUm91dGUgNDcNNDggLSBSb3V0ZSA0OA01MCAtIFJvdXRlIDUwDTUxIC0gUm91dGUgNTENNTIgLSBSb3V0ZSA1Mg01NSAtIFJvdXRlIDU1DTU2IC0gUm91dGUgNTYNNTcgLSBSb3V0ZSA1Nw01OCAtIFJvdXRlIDU4DTU5IC0gUm91dGUgNTkNNjMgLSBSb3V0ZSA2Mw02NyAtIFJvdXRlIDY3DTY4IC0gUm91dGUgNjgNNzAgLSBSb3V0ZSA3MA03MSAtIFJvdXRlIDcxDTcyIC0gUm91dGUgNzINNzMgLSBSb3V0ZSA3Mw03NCAtIFJvdXRlIDc0DTc4IC0gUm91dGUgNzgNODAgLSBSb3V0ZSA4MA04MSAtIFJvdXRlIDgxDTgyIC0gUm91dGUgODINODQgLSBSb3V0ZSA4NA04NSAtIFJvdXRlIDg1Fzk0IC0gU3VwcGxlbWVudGFsIFJvdXRlFT8OU2VsZWN0IGEgcm91dGUCMDECMDICMDMCMDQCMDUCMDYCMDcCMDgCMDkCMTACMTECMTICMTMCMTQCMTUCMTYCMTcCMTgCMTkCMjACMjECMjICMjUCMjYCMjcCMjgCMjkCMzACMzICMzMCMzQCMzYCMzcCMzgCMzkCNDACNDQCNDcCNDgCNTACNTECNTICNTUCNTYCNTcCNTgCNTkCNjMCNjcCNjgCNzACNzECNzICNzMCNzQCNzgCODACODECODICODQCODUCOTQUKwM%2FZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnFgECIGQCBQ8PFgIeBFRleHQFWERvd25sb2FkaW5nIHRoZSBtYXAgbWF5IHRha2UgYSBmZXcgbWludXRlcywgZGVwZW5kaW5nIG9uIHRoZSBzaXplIGFuZCBkZXRhaWwgb2YgdGhlIG1hcC5kZAIHDxYCHwAF9Cg8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBTdHJpY3QvL0VOIiAgICANCiAgICAgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXN0cmljdC5kdGQiPg0KPGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiIHhtbG5zOnY9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206dm1sIj4NCiAgIDxoZWFkPiAgICAgIA0KICAgICAgPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgiPg0KICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4gICAgDQogICAgdlw6KiB7ICAgICANCiAgICAgICAgYmVoYXZpb3I6dXJsKCNkZWZhdWx0I1ZNTCk7IA0KICAgICAgICAgfSAgICANCiAgICAgPC9zdHlsZT4gICAgIA0KICAgICAgPHNjcmlwdCBzcmM9Imh0dHA6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcz9maWxlPWFwaSZhbXA7dj0yLngmYW1wO2tleT1BQlFJQUFBQWVNcUVwMlV1QktUY2xMUTRmYl92eHhTREwwbUlrQ1VBRXdXV2xmWHNnSUZDOC1TMnZoU1piM09aNE9uTUdVS1d4bUlxR2EtbGs4Q21aQSI%2BPC9zY3JpcHQ%2BDQogICAgICA8c2NyaXB0IHNyYz0iU2NyaXB0cy9Mb2FkTWFwLmpzIj48L3NjcmlwdD4NCiAgICAgIDxzY3JpcHQgc3JjPSJTY3JpcHRzL0dvb2dsZU1hcEZ1bmNzLmpzIj48L3NjcmlwdD4NCiAgICAgIDxzY3JpcHQgc3JjPSJTY3JpcHRzL1JvdXRlMzZfdHJhY2UuanMiPjwvc2NyaXB0Pg0KICAgICAgPHNjcmlwdD52YXIgaW5pdEluZm9TdHJpbmc9IjM2KjMwMDAwKkRlcGFydHVyZShzKSo0LzExLzIwMTAgMjozMjoyMSBQTSo0My4xMjYxODAxfC04OS4zMDcyNTEyfEVhc3QgVG93bmUgTWFsbHxDaXR5IFZ3LUUgVG93bmV8Mjo0MCBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPjM6MzAgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj40OjQwIFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BfDI3OzQzLjEzMjU5NTd8LTg5LjI4ODE3MzF8V2FsbCAmIENpdHkgVmlld3xDaXR5IFZ3LUUgVG93bmV8Mjo0NiBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPjM6MzYgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj40OjQ2IFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BfDI3OyoqNDMuMTM1NzA1OHwtODkuMjg3OTg4MnxDSVRZIFZJRVcgJiBCVVJLRSBbSUQjOTgyNl18Q2l0eSBWdy1FIFRvd25lfDI6NDUgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj4zOjM1IFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BNDo0NSBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPnwyNzs0My4xMzgzNzI3fC04OS4yODkwNTkxfENJVFkgVklFVyAmIEhJIENST1NTSU5HIFtJRCM5MTMxXXxDaXR5IFZ3LUUgVG93bmV8Mjo0NCBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPjM6MzQgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj40OjQ0IFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BfDI3OzQzLjEzMzMzMDh8LTg5LjI4NzkxNTF8Q0lUWSBWSUVXICYgSE9MQlVSTiBbSUQjOTQ5OF18Q2l0eSBWdy1FIFRvd25lfDI6NDUgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj4zOjM1IFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BNDo0NSBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPnwyNzs0My4xMzQzNDA3fC04OS4yOTAxOTc2fENST1NTUk9BRFMgJiAyODAxIFtJRCM5MzQ5XXxDaXR5IFZ3LUUgVG93bmV8Mjo0NyBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPjM6MzcgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj40OjQ3IFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BfDI3OzQzLjEzMjQzMzl8LTg5LjI5MDQzMDh8Q1JPU1NST0FEUyAmIFdBTEwgW0lEIzk2MTVdfENpdHkgVnctRSBUb3duZXwyOjQ2IFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BMzozNiBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPjQ6NDYgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj58Mjc7NDMuMTMxNDg1M3wtODkuMjk3NjUwM3xFIFNQUklOR1MgJiBISSBDUk9TU0lORyBbSUQjOTE0MF18Q2l0eSBWdy1FIFRvd25lfDI6NTAgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj4zOjQwIFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BNDo1MCBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPnwyNzs0My4xMjc5MDh8LTg5LjI5MzU1NTd8RSBTUFJJTkdTICYgTUVOQVJEUyBbSUQjOTYyMF18Q2l0eSBWdy1FIFRvd25lfDI6NTIgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj4zOjQyIFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BNDo1MiBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPnwyNzs0My4xMjk2M3wtODkuMjk0OTIyM3xFIFNQUklOR1MgJiBQRVRTTUFSVCBbSUQjOTMxMF18Q2l0eSBWdy1FIFRvd25lfDI6NTEgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj4zOjQxIFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BNDo1MSBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPnwyNzs0My4xMjUzNTgxfC04OS4yOTk3Mzk1fEUgU1BSSU5HUyAmIFpFSUVSIFtJRCM5ODYwXXxDaXR5IFZ3LUUgVG93bmV8Mjo1NCBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPjM6NDQgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj40OjU0IFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BfDI3OzQzLjEzMDU0Njh8LTg5LjMwMTk2Njh8RUFTVCBUT1dORSAmIEUgU1BSSU5HUyBbSUQjOTM1MV18Q2l0eSBWdy1FIFRvd25lfDI6NDEgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj4zOjMxIFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BNDo0MSBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPnwyNzs0My4xMjcxMDk2fC04OS4zMDc4MjM2fEVBU1QgVE9XTkUgJiBJTkRFUEVOREVOQ0UgW0lEIzkyMjRdfENpdHkgVnctRSBUb3duZXwyOjU2IFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BMzo0NiBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPjQ6NTYgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj58Mjc7NDMuMTI3NDM2OHwtODkuMzA3MTA5MXxFQVNUIFRPV05FICYgSU5ERVBFTkRFTkNFIFtJRCM5NzgzXXxDaXR5IFZ3LUUgVG93bmV8Mjo0MCBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPjM6MzAgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj40OjQwIFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BfDI3OzQzLjEyOTE3NzN8LTg5LjMwNDI0MzF8RUFTVCBUT1dORSAmIFpFSUVSIFtJRCM5MzkxXXxDaXR5IFZ3LUUgVG93bmV8Mjo0MCBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPjM6MzAgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj40OjQwIFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BfDI3OzQzLjEyODY4MTh8LTg5LjMwNTIyMzV8RUFTVCBUT1dORSAmIFpFSUVSIFtJRCM5OTI4XXxDaXR5IFZ3LUUgVG93bmV8Mjo1NiBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPjM6NDYgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj40OjU2IFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BfDI3OzQzLjEzNTkzNTd8LTg5LjI5MTM0NTd8SEkgQ1JPU1NJTkcgJiBDUk9TU1JPQURTIFtJRCM5MjY0XXxDaXR5IFZ3LUUgVG93bmV8Mjo0OCBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPjM6MzggUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj40OjQ4IFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BfDI3OzQzLjEzNjM3ODN8LTg5LjI5MDc5N3xISSBDUk9TU0lORyAmIENST1NTUk9BRFMgW0lEIzk1NzddfENpdHkgVnctRSBUb3duZXwyOjQzIFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BMzozMyBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPjQ6NDMgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj58Mjc7NDMuMTMxOTc5MXwtODkuMjk3NzE4OXxISSBDUk9TU0lORyAmIEUgU1BSSU5HUyBbSUQjOTcwMV18Q2l0eSBWdy1FIFRvd25lfDI6NDIgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj4zOjMyIFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BNDo0MiBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPnwyNzs0My4xMjY5Njl8LTg5LjMwMTY1MTN8WkVJRVIgJiBUT1lTLVItVVMgRUFTVCBbSUQjOTkxN118Q2l0eSBWdy1FIFRvd25lfDI6NTQgUE0gIFRPIEUgVE9XTkU6Q0lUWSBWVzxicj4zOjQ0IFBNICBUTyBFIFRPV05FOkNJVFkgVlc8YnI%2BNDo1NCBQTSAgVE8gRSBUT1dORTpDSVRZIFZXPGJyPnwyNzsiOzwvc2NyaXB0PiAgICAgICAgICAgDQogIDwvaGVhZD4NCiANCiAgIDxib2R5IG9ubG9hZD0iTG9hZCgpOyI%2BDQogICAgICAgPHRhYmxlPg0KICAgICAgICAgICA8dHI%2BDQogICAgICAgICAgICAgICA8dGQ%2BDQogICAgICAgICAgICAgICAgICA8ZGl2IGlkPSdteU1hcCcgc3R5bGU9InBvc2l0aW9uOnJlbGF0aXZlOyB3aWR0aDo2MDBweDsgaGVpZ2h0OjUxMHB4OyI%2BPC9kaXY%2BICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgPGRpdiBJRD1NeVRleHQgQUxJR049ImNlbnRlciIgc3R5bGU9ImZvbnQtc2l6ZSA6c21hbGxlciIgPjwvZGl2Pg0KICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgIDx0ZCAgdmFsaWduPSJ0b3AiPg0KICAgICAgICAgICAgICAgICAgPGRpdiBpZD0nbGF5ZXJzJz4NCiAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0iQ2hlY2tib3gxIiB0eXBlPSJjaGVja2JveCIgbmFtZT0iVmVoaWNsZXMiIG9uY2xpY2s9InRoaXMuY2hlY2tlZCA%2FIFNob3dTaGFwZUxheWVyKDIpIDogSGlkZVNoYXBlTGF5ZXIoMik7ImNoZWNrZWQ9ImNoZWNrZWQiIC8%2BU2hvdyBCdXNlczxicj4NCiAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0iQ2hlY2tib3gyIiB0eXBlPSJjaGVja2JveCIgbmFtZT0iTWFqb3IgU3RvcHMiIG9uY2xpY2s9InRoaXMuY2hlY2tlZCA%2FIFNob3dTaGFwZUxheWVyKDEpIDogSGlkZVNoYXBlTGF5ZXIoMSk7IiBjaGVja2VkPSJjaGVja2VkIiAvPlNob3cgVGltZSBQb2ludHM8YnI%2BICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9IkNoZWNrYm94MyIgdHlwZT0iY2hlY2tib3giIG5hbWU9Ik1pbm9yIFN0b3BzIiBvbmNsaWNrPSJ0aGlzLmNoZWNrZWQgPyBTaG93U2hhcGVMYXllcigwKSA6IEhpZGVTaGFwZUxheWVyKDApOyIgIC8%2BU2hvdyBNaW5vciBTdG9wczxicj4gDQogICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgIDwvdGQ%2BICAgICAgICAgICAgICAgDQogICAgICAgICAgIDwvdHI%2BDQogICAgICAgPC90YWJsZT4NCiAgICA8L2JvZHk%2BDQo8L2h0bWw%2BZGQ059qng0xMRWiD5HT219i2t%2FTaBw%3D%3D&__EVENTVALIDATION=%2FwEWQQLii4vyCwLSv%2FPlBwKc8cP0BALC0JWICwLC0JGICwLC0K2ICwLC0KmICwLC0KWICwLC0KGICwLC0L2ICwLC0PmLCwLC0PWLCwLd0JmICwLd0JWICwLd0JGICwLd0K2ICwLd0KmICwLd0KWICwLd0KGICwLd0L2ICwLd0PmLCwLd0PWLCwLc0JmICwLc0JWICwLc0JGICwLc0KWICwLc0KGICwLc0L2ICwLc0PmLCwLc0PWLCwLf0JmICwLf0JGICwLf0K2ICwLf0KmICwLf0KGICwLf0L2ICwLf0PmLCwLf0PWLCwLe0JmICwLe0KmICwLe0L2ICwLe0PmLCwLZ0JmICwLZ0JWICwLZ0JGICwLZ0KWICwLZ0KGICwLZ0L2ICwLZ0PmLCwLZ0PWLCwLY0K2ICwLY0L2ICwLY0PmLCwLb0JmICwLb0JWICwLb0JGICwLb0K2ICwLb0KmICwLb0PmLCwLK0JmICwLK0JWICwLK0JGICwLK0KmICwLK0KWICwLF0KmICx4HW31D2zT11idC356JatBJlMZc&ddlMaps='+ '%02d' % route).read()
	
	regexp = re.search('initInfoString="(.*)"', html)
	if regexp == None:
		print >> sys.stderr, "No stops found for route", route
		return
	
	infostring = regexp.group(1);
	
	parts = infostring.split('*')
	RouteAbbr = parts[0]
	RefreshRate = parts[1]
	StopDisplayTypeDesc = parts[2]
	
	print >> sys.stderr, "RouteAbbr:", RouteAbbr
	print >> sys.stderr, "RefreshRate:", RefreshRate
	print >> sys.stderr, "StopDisplayTypeDesc:", StopDisplayTypeDesc
	
	MajorStops = parts[4]
	print_stops('MajorStops', MajorStops, stopdict, route)
	
	Vehicles = parts[5]
	
	
	if len(parts) > 6:
		MinorStops = parts[6]
		print_stops('MinorStops', MinorStops, stopdict, route)
	else:
		print >> sys.stderr, "no minor stops for this route"
	
	print_vehicles(Vehicles)
	
	
	#print stopdict

stopdict = {}
#get_stops(94, stopdict)

for i in range(1, 100):
	get_stops(i, stopdict)

print >> sys.stderr
#print >> sys.stderr, stopdict
print >> sys.stderr, len(stopdict)

print json.dumps(stopdict, sort_keys=True, indent=4)

